[build-system]
requires = [
    "setuptools>=65.0",
    "setuptools-scm[toml]>=8.0",
    "mypy>=1.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "cot-fastpath"
version = "0.1.0"
license = {text = "MIT"}
authors = [{name = "Ronny Pfannschmidt"}]
description = "Fast and memory-efficient pathlib implementation for Python"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pre-commit",
    "tox",
    "mypy>=1.0",
    "ruff",
]
testing = [
    "pytest>=8.0",
    "pytest-benchmark",
    "pytest-cov",
    "hypothesis",
]

[project.urls]
Homepage = "https://github.com/RonnyPfannschmidt/cot-fastpath"
Repository = "https://github.com/RonnyPfannschmidt/cot-fastpath"
Issues = "https://github.com/RonnyPfannschmidt/cot-fastpath/issues"

[tool.setuptools]
packages = ["fastpath"]
package-dir = {""="src"}
package-data = {"fastpath" = ["py.typed"]}

[tool.setuptools_scm]
write_to = "src/fastpath/_version.py"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
no_implicit_optional = true

[tool.mypyc]
opt_level = "3"

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "RUF",    # ruff-specific
]
ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
force-single-line = true
combine-as-imports = true
force-sort-within-sections = true
known-local-folder = ["fastpath"]
lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
"testing/*.py" = ["B018"]  # Allow useless expressions in tests

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["testing"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
xfail_strict = true
filterwarnings = ["error"]

[tool.coverage.run]
source = ["src/fastpath"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "@overload",
]